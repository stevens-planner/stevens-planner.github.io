{"ast":null,"code":"var _jsxFileName = \"/Users/beminshaker/Downloads/stevens-planner/webapp/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport \"@lourenci/react-kanban/dist/styles.css\"; // Use your own styles to override the default styles\n// import \"./styles.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst board = {\n  columns: [{\n    id: 1,\n    title: \"Backlog\",\n    cards: [{\n      id: 1,\n      title: \"Card title 1\",\n      description: \"Card content\"\n    }, {\n      id: 2,\n      title: \"Card title 2\",\n      description: \"Card content\"\n    }, {\n      id: 3,\n      title: \"Card title 3\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 2,\n    title: \"Doing\",\n    cards: [{\n      id: 9,\n      title: \"Card title 9\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 3,\n    title: \"Q&A\",\n    cards: [{\n      id: 10,\n      title: \"Card title 10\",\n      description: \"Card content\"\n    }, {\n      id: 11,\n      title: \"Card title 11\",\n      description: \"Card content\"\n    }]\n  }, {\n    id: 4,\n    title: \"Production\",\n    cards: [{\n      id: 12,\n      title: \"Card title 12\",\n      description: \"Card content\"\n    }, {\n      id: 13,\n      title: \"Card title 13\",\n      description: \"Card content\"\n    }]\n  }]\n};\n\nfunction ControlledBoard() {\n  _s();\n\n  // You need to control the state yourself.\n  const [controlledBoard, setBoard] = useState(board);\n\n  function handleCardMove(_card, source, destination) {\n    const updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Board, {\n    onCardDragEnd: handleCardMove,\n    disableColumnDrag: true,\n    children: controlledBoard\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledBoard, \"4kpf5uQrtxO1PvDU8aNnGaXYJtM=\");\n\n_c = ControlledBoard;\n\nfunction UncontrolledBoard() {\n  return /*#__PURE__*/_jsxDEV(Board, {\n    allowRemoveLane: true,\n    allowRenameColumn: true,\n    allowRemoveCard: true,\n    onLaneRemove: console.log,\n    onCardRemove: console.log,\n    onLaneRename: console.log,\n    initialBoard: board,\n    allowAddCard: {\n      on: \"top\"\n    },\n    onNewCardConfirm: draftCard => ({\n      id: new Date().getTime(),\n      ...draftCard\n    }),\n    onCardNew: console.log\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = UncontrolledBoard;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Example of an uncontrolled board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UncontrolledBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Example of a controlled board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Just the card moving is implemented in this demo.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In this kind of board, you can do whatever you want. We just mirror your board state.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ControlledBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c3 = App;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 130,\n  columnNumber: 17\n}, this), rootElement);\n/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n*/\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ControlledBoard\");\n$RefreshReg$(_c2, \"UncontrolledBoard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/beminshaker/Downloads/stevens-planner/webapp/src/index.js"],"names":["React","useState","ReactDOM","Board","moveCard","board","columns","id","title","cards","description","ControlledBoard","controlledBoard","setBoard","handleCardMove","_card","source","destination","updatedBoard","UncontrolledBoard","console","log","on","draftCard","Date","getTime","App","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Board, { moveCard } from \"@lourenci/react-kanban\";\nimport \"@lourenci/react-kanban/dist/styles.css\";\n// Use your own styles to override the default styles\n// import \"./styles.css\";\n\nconst board = {\n  columns: [\n    {\n      id: 1,\n      title: \"Backlog\",\n      cards: [\n        {\n          id: 1,\n          title: \"Card title 1\",\n          description: \"Card content\",\n        },\n        {\n          id: 2,\n          title: \"Card title 2\",\n          description: \"Card content\",\n        },\n        {\n          id: 3,\n          title: \"Card title 3\",\n          description: \"Card content\",\n        },\n      ],\n    },\n    {\n      id: 2,\n      title: \"Doing\",\n      cards: [\n        {\n          id: 9,\n          title: \"Card title 9\",\n          description: \"Card content\",\n        },\n      ],\n    },\n    {\n      id: 3,\n      title: \"Q&A\",\n      cards: [\n        {\n          id: 10,\n          title: \"Card title 10\",\n          description: \"Card content\",\n        },\n        {\n          id: 11,\n          title: \"Card title 11\",\n          description: \"Card content\",\n        },\n      ],\n    },\n    {\n      id: 4,\n      title: \"Production\",\n      cards: [\n        {\n          id: 12,\n          title: \"Card title 12\",\n          description: \"Card content\",\n        },\n        {\n          id: 13,\n          title: \"Card title 13\",\n          description: \"Card content\",\n        },\n      ],\n    },\n  ],\n};\n\nfunction ControlledBoard() {\n  // You need to control the state yourself.\n  const [controlledBoard, setBoard] = useState(board);\n\n  function handleCardMove(_card, source, destination) {\n    const updatedBoard = moveCard(controlledBoard, source, destination);\n    setBoard(updatedBoard);\n  }\n\n  return (\n    <Board onCardDragEnd={handleCardMove} disableColumnDrag>\n      {controlledBoard}\n    </Board>\n  );\n}\n\nfunction UncontrolledBoard() {\n  return (\n    <Board\n      allowRemoveLane\n      allowRenameColumn\n      allowRemoveCard\n      onLaneRemove={console.log}\n      onCardRemove={console.log}\n      onLaneRename={console.log}\n      initialBoard={board}\n      allowAddCard={{ on: \"top\" }}\n      onNewCardConfirm={(draftCard) => ({\n        id: new Date().getTime(),\n        ...draftCard,\n      })}\n      onCardNew={console.log}\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <>\n      <h4>Example of an uncontrolled board</h4>\n      <UncontrolledBoard />\n      <h4>Example of a controlled board</h4>\n      <p>Just the card moving is implemented in this demo.</p>\n      <p>\n        In this kind of board, you can do whatever you want. We just mirror your\n        board state.\n      </p>\n      <ControlledBoard />\n    </>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n\n/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n*/\n"]},"metadata":{},"sourceType":"module"}